{"version":3,"file":"ngx-grid-stack.js.map","sources":["ng://ngx-grid-stack/lib/models/grid-stack-item.model.ts","ng://ngx-grid-stack/lib/models/grid-stack-options.model.ts","ng://ngx-grid-stack/lib/grid-stack-item/grid-stack-item.component.ts","ng://ngx-grid-stack/lib/grid-stack/grid-stack.component.ts","ng://ngx-grid-stack/lib/grid-stack.module.ts"],"sourcesContent":["\nexport class GridStackItem {\n    x = 0;\n    y = 0;\n    height = 1;\n    width = 1;\n    maxHeight: number;\n    minHeight: number;\n    maxWidth: number;\n    minWidth: number;\n    noResize = false;\n    noMove: boolean;\n    autoPosition = false;\n    marginWidth = '10px';\n    locked: boolean;\n    el: any;\n    customId: string;\n    static Clone(widget: GridStackItem) {\n        const result = new GridStackItem();\n\n        result.autoPosition = widget.autoPosition;\n        result.customId = widget.customId;\n        result.el = widget.el;\n        result.height = widget.height;\n        result.locked = widget.locked;\n        result.maxHeight = widget.maxHeight;\n        result.maxWidth = widget.maxWidth;\n        result.minHeight = widget.minHeight;\n        result.minWidth = widget.minWidth;\n        result.noMove = widget.noMove;\n        result.noResize = widget.noResize;\n        result.width = widget.width;\n        result.x = widget.x;\n        result.y = widget.y;\n\n        return result;\n    }\n}\n","export class GridStackOptions {\n    acceptWidgets: boolean;\n    alwaysShowResizeHandle: boolean;\n    animate: boolean;\n    auto: boolean;\n    cellHeight: string; //default is 60 could be an integer (px) a string (ex: '10em', '100px', '10rem') 0 or null 'auto' - height will be calculated from cell width.\n    ddPlugin: boolean;\n    disableDrag: boolean;\n    disableResize: boolean;\n    draggable: boolean;\n    handle: string; //default: '.grid-stack-item-content'\n    handleClass: string;  //draggable handle class (e.g. 'grid-stack-item-content'). If set handle is ignored (default: null)\n    height: number; //maximum rows amount. Default is 0 which means no maximum rows\n    float: boolean; // enable floating widgets (default: false)\n    itemClass: string;  //widget class (default: 'grid-stack-item')\n    minWidth: string; //minimal width.If window width is less, grid will be shown in one - column mode (default: 768)\n    disableOneColumnMode: boolean; //disables the onColumnMode when the window width is less than minWidth (default: 'false')\n    oneColumnModeClass: string; //class set on grid when in one column mode (default: 'grid-stack-one-column-mode')\n    placeholderClass: string; //class for placeholder (default: 'grid-stack-placeholder')\n    placeholderText: string; //placeholder default content (default: '')\n    resizable: boolean; //allows to override jQuery UI resizable options. (default: {autoHide: true, handles: 'se'})\n    removable: boolean; //if true widgets could be removed by dragging outside of the grid. It could also be a jQuery selector string, in this case widgets will be removed by dropping them there (default: false)\n    removeTimeout: number; // time in milliseconds before widget is being removed while dragging outside of the grid. (default: 2000)\n    rtl: string; //if true turns grid to RTL. Possible values are true, false, 'auto' (default: 'auto') See example\n    staticGrid: boolean; //makes grid static (default false). If true widgets are not movable/resizable. You don't even need jQueryUI draggable/resizable. A CSS class grid-stack-static is also added to the container.\n    verticalMargin: number; //vertical gap size (default: 20). Can be: an integer (px) a string (ex: '2em', '20px', '2rem')\n    width: number; //amount of columns (default: 12). Setting non-default value must be supported by equivalent change in CSS\n}\n","import {\n  Component,\n  Input,\n  Output,\n  OnInit,\n  ComponentRef,\n  ElementRef,\n  ViewChild,\n  Renderer,\n  EventEmitter,\n  OnDestroy,\n  AfterViewInit,\n  ViewContainerRef\n} from '@angular/core';\nimport { GridStackItem } from './../models/grid-stack-item.model';\ndeclare var jQuery: any;\ndeclare var _: any;\n@Component({\n  selector: 'ngx-grid-stack-item',\n  template: `<div class=\"grid-stack-item-content\">\n  <div #contentPlaceholder *ngIf=\"contentTemplate\"></div>\n  <ng-content *ngIf=\"!contentTemplate\"></ng-content>\n</div>\n`,\n  styles: [``]\n})\nexport class GridStackItemComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  @ViewChild('contentPlaceholder', { read: ViewContainerRef }) contentPlaceholder: ViewContainerRef;\n  @Input() contentTemplate: string;\n  @Input() option: GridStackItem;\n  @Output() GridConfigurationChanged = new EventEmitter<GridStackItem>();\n\n  contentComponentRef: ComponentRef<any> = null;\n  jGridRef: any = null;\n  public jWidgetRef: any = null;\n\n  constructor(private el: ElementRef, private renderer: Renderer) {\n      this.jWidgetRef = el.nativeElement;\n  }\n  get nativeElement(): HTMLElement {\n      return this.el.nativeElement;\n  }\n  ngOnInit() {\n      this.RenderWidget(null);\n  }\n\n  UpdateWidget(item: GridStackItem) {\n\n  }\n  RenderWidget(item: GridStackItem) {\n      const renderer = this.renderer;\n      if (item != null) {\n        this.option = item;\n      }\n\n      this.renderer.setElementAttribute(this.nativeElement, 'style', 'margin-left:' + this.option.marginWidth + ';');\n      this.renderer.setElementAttribute(this.nativeElement, 'data-gs-x', String(this.option.x));\n      this.renderer.setElementAttribute(this.nativeElement, 'data-gs-y', String(this.option.y));\n      this.renderer.setElementAttribute(this.nativeElement, 'data-gs-width', String(this.option.width));\n      this.renderer.setElementAttribute(this.nativeElement, 'data-gs-height', String(this.option.height));\n      if (this.option.minWidth) {\n          renderer.setElementAttribute(this.nativeElement, 'data-gs-min-width', String(this.option.minWidth));\n      }\n      if (this.option.noResize != null && this.option.noResize === true) {\n          renderer.setElementAttribute(this.nativeElement, 'data-gs-no-resize', 'yes');\n      }\n\n  }\n\n  update(x: number, y: number, width: number, height: number): void {\n      // console.log('here');\n      if (x === this.option.x && y === this.option.y && width === this.option.width && height === this.option.height) {\n        return;\n      }\n\n      if (this.option != null) {\n          this.option.x = x;\n          this.option.y = y;\n          this.option.width = width;\n          this.option.height = height;\n\n          const optionNew = GridStackItem.Clone(this.option);\n          this.GridConfigurationChanged.emit(optionNew);\n      }\n  }\n\n  ngAfterViewInit(): void {\n\n  }\n\n  ngOnDestroy(): void {\n      if (this.contentComponentRef !== null) {\n        this.contentComponentRef.destroy();\n      }\n  }\n}\n","import { Component, QueryList, Input, ContentChildren, ElementRef, Renderer, AfterContentInit } from '@angular/core';\nimport { GridStackOptions } from './../models/grid-stack-options.model';\nimport { GridStackItem } from './../models/grid-stack-item.model';\nimport { GridStackItemComponent } from './../grid-stack-item/grid-stack-item.component';\n\ndeclare var jQuery: any;\ndeclare var _: any;\n@Component({\n  selector: 'ngx-grid-stack',\n  template: `<ng-content></ng-content>\n`,\n  styles: [':host { display: block; }']\n})\nexport class GridStackComponent implements AfterContentInit {\n\n  @Input() options: GridStackOptions = new GridStackOptions();\n    @ContentChildren(GridStackItemComponent) items: QueryList<GridStackItemComponent>;\n    private gridStack: any = null;\n    private grid: any = null;\n    private defaultOptions = {\n      cellHeight: '60px',\n      width: 12,\n      height: 0,\n      animate: true,\n      float: false,\n      resizable: true\n    };\n\n    constructor(private el: ElementRef, private renderer: Renderer) {\n    }\n\n    public makeWidget(item: GridStackItemComponent) {\n        item.jGridRef = this.grid;\n        if (item.option != null && item.option.noResize != null && item.option.noResize) {\n          return;\n        }\n\n        this.grid.resizable(item.nativeElement, true);\n        this.grid.move(item.nativeElement, item.option.x, item.option.y);\n        this.grid.resize(item.nativeElement, item.option.width, item.option.height);\n    }\n\n    public updateWidget(item: GridStackItemComponent) {\n        this.grid.resizable(item.nativeElement, true);\n        this.grid.move(item.nativeElement, item.option.x, item.option.y);\n        this.grid.resize(item.nativeElement, item.option.width, item.option.height);\n    }\n\n    public AddWidget(item: GridStackItemComponent) {\n        item.jGridRef = this.grid;\n        if (item.option != null && item.option.noResize != null && item.option.noResize) {\n          return;\n        }\n        this.grid.makeWidget(item.nativeElement);\n        this.grid.resizable(item.nativeElement, true);\n        this.grid.move(item.nativeElement, item.option.x, item.option.y);\n        this.grid.resize(item.nativeElement, item.option.width, item.option.height);\n    }\n\n    public RemoveWidget(item: GridStackItemComponent) {\n        this.grid.removeWidget(item.nativeElement, false);\n    }\n\n    ngAfterContentInit(): void {\n        const that = this;\n        const nativeElement = this.el.nativeElement;\n        if (this.options == null) {\n          this.options = new GridStackOptions();\n        }\n\n        for (const key of Object.keys(this.defaultOptions)) {\n          if (!this.options.hasOwnProperty(key)) {\n            this.options = this.defaultOptions[key];\n          }\n        }\n\n        this.renderer.setElementAttribute(nativeElement, 'data-gs-width', String(this.options.width));\n        this.renderer.setElementAttribute(nativeElement, 'data-gs-height', String(this.options.height));\n\n        this.gridStack = jQuery(nativeElement).gridstack(this.options);\n        this.grid = this.gridStack.data('gridstack');\n\n        this.gridStack.on('change', (e: any, items: any) => {\n            _.each(items, (item: any) => this.widgetChanged(item));\n        });\n\n        // Initialize widgets\n        this.items.forEach(item => that.makeWidget(item));\n    }\n\n    private widgetChanged(change: GridStackItem): void {\n        const jWidget = change.el;\n        const gridStackItem = this.items.find(item => item.jWidgetRef !== null ? item.jWidgetRef === jWidget[0] : false);\n        if (!gridStackItem) {\n          return;\n        }\n\n        gridStackItem.update(change.x, change.y, change.width, change.height);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { GridStackComponent } from './grid-stack/grid-stack.component';\nimport { GridStackItemComponent } from './grid-stack-item/grid-stack-item.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [GridStackComponent, GridStackItemComponent],\n  exports: [GridStackComponent, GridStackItemComponent]\n})\nexport class GridStackModule { }\n"],"names":["tslib_1.__values"],"mappings":"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"}
